<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0..*</help_text>
  <zoom_level>9</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>684</x>
      <y>927</y>
      <w>261</w>
      <h>234</h>
    </coordinates>
    <panel_attributes>_cs2800::Stack_
bg=pink
This class represents a 
Stack of Entry values
--
*Attributes*
-size: integer
-entries: List&lt;Entry&gt;
--
*Responsibilities*
+getSize(): Integer
/.   Returns the number of entries in the stack/
+push(entry: Entry)
/    Adds a new Entry to the Stack/
+pop(): Entry {exception=EmptyStack}
/    Returns (and removes) newest Entry/
+top(): Entry {exception=EmptyStack}
/    Return (but keeps) newset Entry/

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>693</x>
      <y>684</y>
      <w>243</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt; 
bg=yellow
_cs2800::Calculator_
Allows calculation of 
String Expressions
--
*Responsibilities*
+evaluate(String: expression): float
     {exception=InvalidExpression}
/    Evaluates and calculates a string expression/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>999</x>
      <y>1323</y>
      <w>189</w>
      <h>135</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt; 
bg=orange
_cs2800::Type_
A list of the types of 
value an Entry can represent
--
_NUMBER_
_SYMBOL_
_STRING_
_INVALID_
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>684</x>
      <y>1215</y>
      <w>261</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>_cs2800::Entry_
bg=orange
Values stored in a Stack
--
*Attributes*
-number: float
-symbol: Symbol
-str: String
-type: Type
--
*Responsibilities*
&lt;&lt;constructor&gt;&gt; +Entry(float value)
&lt;&lt;constructor&gt;&gt; +Entry(Symbol which)
&lt;&lt;constructor&gt;&gt; +Entry(String string)
+getType(): Type
+getNumber(): float
              {exception=InvalidEntryType}
/ Returns the number stored in the Entry/
+getSymbol(): Symbol 
              {exception= InvalidEntryType}
/ Returns the symbol stored in the Entry/
+getStr(): String 
              {Exception= InvalidEntryType}
/ Returns the string stored in the Entry/
+toString(): String
/Returns a string representation of the entry/
+hashCode(): int
+equals(): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>423</x>
      <y>1206</y>
      <w>216</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt; 
bg=orange
_cs2800::Symbol_
A list of the non-number tokens 
possible in an expression
--
_LEFT BRACKET_
_RIGHT BRACKET_
_TIMES_
_DIVIDE_
_PLUS_
_MINUS_
_INVALID_

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>684</x>
      <y>27</y>
      <w>288</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>&lt;&lt;model&gt;&gt;
bg=red
_cs2800: CalcModel_
Also shows the values of each of
the Calculator's memories.
--
*Attributes*
-revPolish: Calculator
-Standard: Calculator
--
*Responsibilities*
+evaluate(expr: String, infix:boolean): float
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>423</x>
      <y>684</y>
      <w>243</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>bg=pink
_cs2800::NumStack_
Since reverse Polish evaluation
only uses a Stack of numeric values
we provide a facade to hide details
--
*Attributes*
-numStack: Stack
--
*Responsibilities*
+getSize(): Integer
/    Returns the number of entries in the NumStack/
+push(i: float)
/    Adds a new float to the stack./
+pop(): float 
               {exception=EmptyStack}
/    Returns and removes newest float/
+isEmpty():boolean
/    Returns true if the NumStack is empty/

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>963</x>
      <y>684</y>
      <w>261</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>bg=pink
_cs2800::OpStack_
Since the Shunting algorithm
only uses a Stack of symbols 
we provide a facade to hide details
--
*Attributes*
-opStack: Stack
--
*Responsibilities*
+getSize() : Integer
/    Returns the number of entries in the OpStack/
+push(i: Symbol)
/    Adds a new Symbol to the OpStack/
+pop(): Symbol 
                    {exception=EmptyStack}
/    Returns and removes newest Symbol/
+isEmpty():boolean
/    Returns true if the stack is empty/

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>945</x>
      <y>351</y>
      <w>315</w>
      <h>234</h>
    </coordinates>
    <panel_attributes>bg=yellow
_cs2800::StandardCalc_
Evaluates infix String Expressions
--
*Attributes*
-rpCalc: RevPolishCalc
-values: NumStack
-operators: OpStack
-stringBuilder: StringBuilder
--
*Responsibilities*
+infixToPostfix(String: expression): string
    {exception=InvalidExpression}
/    Converts and returns an infix expression in postfix/
+evaluate(String: what): float
     {exception=InvalidExpression}
/    Evaluates and calculates a string expression/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>513</x>
      <y>396</y>
      <w>234</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>bg=yellow
_cs2800::RevPolishCalc_
Evaluates Reverse Polish
String Expressions
--
*Attributes*
-values: NumStack
--
*Responsibilities*
+evaluate(String: expression): float
     {exception=InvalidExpression}
/    Evaluates and calculates a string expression/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>612</x>
      <y>171</y>
      <w>198</w>
      <h>243</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>200.0;10.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>828</x>
      <y>171</y>
      <w>216</w>
      <h>198</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1044</x>
      <y>576</y>
      <w>54</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>936</x>
      <y>927</y>
      <w>162</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
&lt;&lt;facade&gt;&gt;</panel_attributes>
    <additional_attributes>160.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>513</x>
      <y>927</y>
      <w>189</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1pos=-50,20
m1=&lt;&lt;facade&gt;&gt;</panel_attributes>
    <additional_attributes>40.0;10.0;190.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>837</x>
      <y>576</y>
      <w>171</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;120.0;170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>684</x>
      <y>540</y>
      <w>108</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>100.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>801</x>
      <y>1152</y>
      <w>27</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>936</x>
      <y>1278</y>
      <w>153</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>630</x>
      <y>1305</y>
      <w>72</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>60.0;30.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>180</x>
      <y>612</y>
      <w>207</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>&lt;&lt;view&gt;&gt;
cs2800::GuiView
A graphical window with 
1. a text field for an expression
2. a "calculate" button
3. a radio button: 
   "Reverse Polish/Infix"
--
-expression: String
-answer: String
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>324</x>
      <y>54</y>
      <w>378</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>400.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>234</x>
      <y>288</y>
      <w>90</w>
      <h>198</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>80.0;200.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>9</x>
      <y>288</y>
      <w>126</w>
      <h>342</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
m2=&lt;&lt;Observer&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;360.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>54</x>
      <y>18</y>
      <w>279</w>
      <h>279</h>
    </coordinates>
    <panel_attributes>&lt;&lt;controller&gt;&gt;
bg=blue
_cs2800:CalcController_
Create view and model.
Adds itself as an observer to the view
so that (asynchronous) changes
can be observed. 
--
*Attributes*
-model: CalcModel
-view: CalcView
-isInfix: boolean
--
*Responsibilities*
+calculate()
Is notified when a 
calculation is required
--
+expressionType()
Is notified when a change of 
expression type is indicated
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>513</x>
      <y>540</y>
      <w>99</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1251</x>
      <y>639</y>
      <w>243</w>
      <h>297</h>
    </coordinates>
    <panel_attributes>bg=pink
_cs2800::StrStack_
The Shunting algorithm
requires reversing an expression in 
order to evaluate left to right - so 
we provide a facade to hide details
--
*Attributes*
-StrStack: Stack
--
*Responsibilities*
+getSize() : Integer
/    Returns the number of entries in the OpStack/
+isEmpty():boolean
/    Returns true if the stack is empty/
+push(str: String)
/    Adds a new String to the Stack/
+pop(): String 
                {exception=EmptyStack}
/    Returns and removes newest String/
+reverse(): void
/    Reverses the order of the StrStack/

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>936</x>
      <y>927</y>
      <w>450</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=&lt;&lt;facade&gt;&gt;
m1pos=-20,40</panel_attributes>
    <additional_attributes>480.0;10.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1251</x>
      <y>450</y>
      <w>126</w>
      <h>207</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;210.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>36</x>
      <y>0</y>
      <w>315</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>valign=bottom
Controller
layer=0
fontsize=28
fg=magenta
bg=light_gray
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9</x>
      <y>450</y>
      <w>396</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>valign=bottom
View Assembly
fontsize=28
fg=magenta
bg=light_gray
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>45</x>
      <y>468</y>
      <w>279</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
cs2800::ViewInterface
--
Responsibilities
--
+getExpression(): String
+setAnswer(str: String): void
+addCalcObserver(f:Runnable): void
+addTypeObserver(l:Consumer&lt;OpType&gt;):void
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9</x>
      <y>612</y>
      <w>135</w>
      <h>135</h>
    </coordinates>
    <panel_attributes>&lt;&lt;view&gt;&gt;
cs2800::AsciiView
A menu based View
--
-expression: String
-answer: String
--
Responsibilities
--
+menu
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>252</x>
      <y>288</y>
      <w>153</w>
      <h>342</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
m2=&lt;&lt;Observer&gt;&gt;</panel_attributes>
    <additional_attributes>150.0;360.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>90</x>
      <y>585</y>
      <w>63</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>243</x>
      <y>585</y>
      <w>72</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>414</x>
      <y>0</y>
      <w>1188</w>
      <h>1584</h>
    </coordinates>
    <panel_attributes>                                                              
                                                              
                                                              
                                                              Model Assembly
layer=0
fontsize=28
fg=magenta
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
